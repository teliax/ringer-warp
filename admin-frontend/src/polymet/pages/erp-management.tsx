import { useState } from "react";
import { Button } from "@/components/ui/button";
import { Input } from "@/components/ui/input";
import { Badge } from "@/components/ui/badge";
import {
  Select,
  SelectContent,
  SelectItem,
  SelectTrigger,
  SelectValue,
} from "@/components/ui/select";
import {
  Card,
  CardContent,
  CardDescription,
  CardHeader,
  CardTitle,
} from "@/components/ui/card";
import {
  Table,
  TableBody,
  TableCell,
  TableHead,
  TableHeader,
  TableRow,
} from "@/components/ui/table";
import {
  Dialog,
  DialogContent,
  DialogDescription,
  DialogHeader,
  DialogTitle,
  DialogTrigger,
} from "@/components/ui/dialog";
import { Tabs, TabsContent, TabsList, TabsTrigger } from "@/components/ui/tabs";
import { Label } from "@/components/ui/label";
import { Textarea } from "@/components/ui/textarea";
import {
  PackageIcon,
  PlusIcon,
  SearchIcon,
  FilterIcon,
  EditIcon,
  TrashIcon,
  DollarSignIcon,
  BarChart3Icon,
  TagIcon,
  SettingsIcon,
  DownloadIcon,
  UploadIcon,
  AlertTriangleIcon,
  CheckCircleIcon,
  RefreshCwIcon,
  PhoneIcon,
  MessageSquareIcon,
  DatabaseIcon,
  LayersIcon,
  PercentIcon,
} from "lucide-react";
import { mockERPProducts } from "@/polymet/data/admin-mock-data";

export function ERPManagement() {
  const [searchTerm, setSearchTerm] = useState("");
  const [categoryFilter, setCategoryFilter] = useState<string>("all");
  const [statusFilter, setStatusFilter] = useState<string>("all");
  const [selectedProduct, setSelectedProduct] = useState<
    (typeof mockERPProducts)[0] | null
  >(null);
  const [isEditDialogOpen, setIsEditDialogOpen] = useState(false);
  const [isNewProductDialogOpen, setIsNewProductDialogOpen] = useState(false);
  const [activeTab, setActiveTab] = useState("products");

  const filteredProducts = mockERPProducts.filter((product) => {
    const matchesSearch =
      product.name.toLowerCase().includes(searchTerm.toLowerCase()) ||
      product.sku.toLowerCase().includes(searchTerm.toLowerCase()) ||
      product.description.toLowerCase().includes(searchTerm.toLowerCase());

    const matchesCategory =
      categoryFilter === "all" || product.category === categoryFilter;
    const matchesStatus =
      statusFilter === "all" || product.status === statusFilter;

    return matchesSearch && matchesCategory && matchesStatus;
  });

  const categories = [...new Set(mockERPProducts.map((p) => p.category))];
  const totalProducts = mockERPProducts.length;
  const activeProducts = mockERPProducts.filter(
    (p) => p.status === "active"
  ).length;
  const totalValue = mockERPProducts.reduce(
    (sum, p) =>
      sum + p.price * (p.unit === "per month" ? p.inventory * 12 : p.inventory),
    0
  );

  const getStatusBadge = (status: string) => {
    const variants = {
      active: "default",
      inactive: "secondary",
      discontinued: "destructive",
      pending: "outline",
    } as const;

    return (
      <Badge variant={variants[status as keyof typeof variants] || "outline"}>
        {status}
      </Badge>
    );
  };

  const getCategoryBadge = (category: string) => {
    const colors = {
      "Voice Services": "bg-blue-100 text-blue-800",
      Messaging: "bg-green-100 text-green-800",
      "Data Services": "bg-purple-100 text-purple-800",
      Hardware: "bg-orange-100 text-orange-800",
      "Professional Services": "bg-gray-100 text-gray-800",
    } as const;

    return (
      <Badge
        className={
          colors[category as keyof typeof colors] || "bg-gray-100 text-gray-800"
        }
      >
        {category}
      </Badge>
    );
  };

  const handleEditProduct = (product: (typeof mockERPProducts)[0]) => {
    setSelectedProduct(product);
    setIsEditDialogOpen(true);
  };

  const handleDeleteProduct = (productId: string) => {
    if (confirm("Are you sure you want to delete this product?")) {
      console.log("Deleting product:", productId);
      // Handle delete logic here
    }
  };

  const ProductForm = ({
    product,
    isEdit = false,
  }: {
    product?: (typeof mockERPProducts)[0];
    isEdit?: boolean;
  }) => (
    <div className="space-y-4">
      <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
        <div className="space-y-2">
          <Label htmlFor="sku">NetSuite Internal ID</Label>
          <Input
            id="sku"
            defaultValue={product?.sku}
            placeholder="Auto-generated by NetSuite"
            disabled
          />
        </div>
        <div className="space-y-2">
          <Label htmlFor="name">Service Plan Name</Label>
          <Input
            id="name"
            defaultValue={product?.name}
            placeholder="Enter service plan name"
          />
        </div>
      </div>

      <div className="space-y-2">
        <Label htmlFor="description">Service Description</Label>
        <Textarea
          id="description"
          defaultValue={product?.description}
          placeholder="Describe the telecom service and features"
        />
      </div>

      <div className="grid grid-cols-1 md:grid-cols-3 gap-4">
        <div className="space-y-2">
          <Label htmlFor="category">Service Type</Label>
          <Select defaultValue={product?.category}>
            <SelectTrigger>
              <SelectValue placeholder="Select category" />
            </SelectTrigger>
            <SelectContent>
              {categories.map((category) => (
                <SelectItem key={category} value={category}>
                  {category}
                </SelectItem>
              ))}
            </SelectContent>
          </Select>
        </div>
        <div className="space-y-2">
          <Label htmlFor="price">Base Rate ($)</Label>
          <Input
            id="price"
            type="number"
            step="0.001"
            defaultValue={product?.price}
            placeholder="0.000"
          />
        </div>
        <div className="space-y-2">
          <Label htmlFor="inventory">Capacity Limit</Label>
          <Input
            id="inventory"
            type="number"
            defaultValue={product?.inventory}
            placeholder="Service capacity limit"
          />
        </div>
      </div>

      <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
        <div className="space-y-2">
          <Label htmlFor="status">Status</Label>
          <Select defaultValue={product?.status || "active"}>
            <SelectTrigger>
              <SelectValue placeholder="Select status" />
            </SelectTrigger>
            <SelectContent>
              <SelectItem value="active">Active</SelectItem>
              <SelectItem value="inactive">Inactive</SelectItem>
              <SelectItem value="discontinued">Discontinued</SelectItem>
              <SelectItem value="pending">Pending</SelectItem>
            </SelectContent>
          </Select>
        </div>
        <div className="space-y-2">
          <Label htmlFor="unit">Billing Unit</Label>
          <Select defaultValue={product?.unit}>
            <SelectTrigger>
              <SelectValue placeholder="Select billing unit" />
            </SelectTrigger>
            <SelectContent>
              <SelectItem value="per minute">Per Minute</SelectItem>
              <SelectItem value="per message">Per Message</SelectItem>
              <SelectItem value="per month">Per Month</SelectItem>
              <SelectItem value="per call">Per Call</SelectItem>
              <SelectItem value="per GB">Per GB</SelectItem>
              <SelectItem value="each">Each</SelectItem>
              <SelectItem value="per service">Per Service</SelectItem>
            </SelectContent>
          </Select>
        </div>
      </div>

      <div className="flex justify-end space-x-2">
        <Button
          variant="outline"
          onClick={() => {
            setIsEditDialogOpen(false);
            setIsNewProductDialogOpen(false);
          }}
        >
          Cancel
        </Button>
        <Button className="bg-[#58C5C7] hover:bg-[#58C5C7]/80">
          {isEdit ? "Update Service Plan" : "Create Service Plan"}
        </Button>
      </div>
    </div>
  );

  return (
    <div className="p-6 space-y-6">
      <div className="flex items-center justify-between">
        <div>
          <h1 className="text-3xl font-bold flex items-center space-x-2">
            <PackageIcon className="w-8 h-8 text-[#58C5C7]" />

            <span>NetSuite Service Catalog</span>
          </h1>
          <p className="text-muted-foreground">
            Manage telecom service plans, pricing tiers, and complex rate
            structures in NetSuite
          </p>
        </div>
        <div className="flex items-center space-x-2">
          <Button variant="outline">
            <RefreshCwIcon className="w-4 h-4 mr-2" />
            Sync NetSuite
          </Button>
          <Button variant="outline">
            <DownloadIcon className="w-4 h-4 mr-2" />
            Export to CSV
          </Button>
          <Dialog
            open={isNewProductDialogOpen}
            onOpenChange={setIsNewProductDialogOpen}
          >
            <DialogTrigger asChild>
              <Button className="bg-[#58C5C7] hover:bg-[#58C5C7]/80">
                <PlusIcon className="w-4 h-4 mr-2" />
                Create Service Plan
              </Button>
            </DialogTrigger>
            <DialogContent className="max-w-2xl">
              <DialogHeader>
                <DialogTitle>Create New Service Plan</DialogTitle>
                <DialogDescription>
                  Create a new telecom service plan in NetSuite with pricing
                  tiers and rate structures
                </DialogDescription>
              </DialogHeader>
              <ProductForm />
            </DialogContent>
          </Dialog>
        </div>
      </div>

      {/* Stats Cards */}
      <div className="grid grid-cols-1 md:grid-cols-4 gap-6">
        <Card>
          <CardHeader className="flex flex-row items-center justify-between space-y-0 pb-2">
            <CardTitle className="text-sm font-medium">Service Plans</CardTitle>
            <PackageIcon className="h-4 w-4 text-muted-foreground" />
          </CardHeader>
          <CardContent>
            <div className="text-2xl font-bold">{totalProducts}</div>
            <p className="text-xs text-muted-foreground">
              {activeProducts} active plans
            </p>
          </CardContent>
        </Card>

        <Card>
          <CardHeader className="flex flex-row items-center justify-between space-y-0 pb-2">
            <CardTitle className="text-sm font-medium">Service Types</CardTitle>
            <TagIcon className="h-4 w-4 text-muted-foreground" />
          </CardHeader>
          <CardContent>
            <div className="text-2xl font-bold">{categories.length}</div>
            <p className="text-xs text-muted-foreground">Service categories</p>
          </CardContent>
        </Card>

        <Card>
          <CardHeader className="flex flex-row items-center justify-between space-y-0 pb-2">
            <CardTitle className="text-sm font-medium">
              Annual Revenue Potential
            </CardTitle>
            <DollarSignIcon className="h-4 w-4 text-muted-foreground" />
          </CardHeader>
          <CardContent>
            <div className="text-2xl font-bold">
              ${totalValue.toLocaleString()}
            </div>
            <p className="text-xs text-muted-foreground">
              Based on current capacity
            </p>
          </CardContent>
        </Card>

        <Card>
          <CardHeader className="flex flex-row items-center justify-between space-y-0 pb-2">
            <CardTitle className="text-sm font-medium">
              Capacity Alerts
            </CardTitle>
            <AlertTriangleIcon className="h-4 w-4 text-muted-foreground" />
          </CardHeader>
          <CardContent>
            <div className="text-2xl font-bold">3</div>
            <p className="text-xs text-muted-foreground">
              Services near capacity
            </p>
          </CardContent>
        </Card>
      </div>

      <Tabs value={activeTab} onValueChange={setActiveTab}>
        <TabsList className="grid w-full grid-cols-5">
          <TabsTrigger value="products">Service Plans</TabsTrigger>
          <TabsTrigger value="categories">Service Types</TabsTrigger>
          <TabsTrigger value="pricing">Pricing Tiers</TabsTrigger>
          <TabsTrigger value="packages">Packages</TabsTrigger>
          <TabsTrigger value="reports">Reports</TabsTrigger>
        </TabsList>

        <TabsContent value="products" className="space-y-4">
          <Card>
            <CardHeader>
              <div className="flex items-center justify-between">
                <div>
                  <CardTitle>NetSuite Service Catalog</CardTitle>
                  <CardDescription>
                    {filteredProducts.length} of {totalProducts} telecom service
                    plans
                  </CardDescription>
                </div>
              </div>

              <div className="flex flex-col sm:flex-row gap-4">
                <div className="relative flex-1">
                  <SearchIcon className="absolute left-3 top-1/2 transform -translate-y-1/2 w-4 h-4 text-muted-foreground" />

                  <Input
                    placeholder="Search service plans by name, SKU, or description..."
                    value={searchTerm}
                    onChange={(e) => setSearchTerm(e.target.value)}
                    className="pl-10"
                  />
                </div>

                <Select
                  value={categoryFilter}
                  onValueChange={setCategoryFilter}
                >
                  <SelectTrigger className="w-[180px]">
                    <SelectValue placeholder="Category" />
                  </SelectTrigger>
                  <SelectContent>
                    <SelectItem value="all">All Categories</SelectItem>
                    {categories.map((category) => (
                      <SelectItem key={category} value={category}>
                        {category}
                      </SelectItem>
                    ))}
                  </SelectContent>
                </Select>

                <Select value={statusFilter} onValueChange={setStatusFilter}>
                  <SelectTrigger className="w-[140px]">
                    <SelectValue placeholder="Status" />
                  </SelectTrigger>
                  <SelectContent>
                    <SelectItem value="all">All Status</SelectItem>
                    <SelectItem value="active">Active</SelectItem>
                    <SelectItem value="inactive">Inactive</SelectItem>
                    <SelectItem value="discontinued">Discontinued</SelectItem>
                    <SelectItem value="pending">Pending</SelectItem>
                  </SelectContent>
                </Select>
              </div>
            </CardHeader>

            <CardContent>
              <div className="rounded-md border">
                <Table>
                  <TableHeader>
                    <TableRow>
                      <TableHead>NetSuite ID</TableHead>
                      <TableHead>Service Plan</TableHead>
                      <TableHead>Service Type</TableHead>
                      <TableHead>Base Rate</TableHead>
                      <TableHead>Capacity</TableHead>
                      <TableHead>Status</TableHead>
                      <TableHead className="text-right">Actions</TableHead>
                    </TableRow>
                  </TableHeader>
                  <TableBody>
                    {filteredProducts.length === 0 ? (
                      <TableRow>
                        <TableCell
                          colSpan={7}
                          className="text-center py-8 text-muted-foreground"
                        >
                          No products found
                        </TableCell>
                      </TableRow>
                    ) : (
                      filteredProducts.map((product) => (
                        <TableRow key={product.id}>
                          <TableCell className="font-mono">
                            {product.sku}
                          </TableCell>
                          <TableCell>
                            <div>
                              <div className="font-medium">{product.name}</div>
                              <div className="text-sm text-muted-foreground truncate max-w-[200px]">
                                {product.description}
                              </div>
                            </div>
                          </TableCell>
                          <TableCell>
                            {getCategoryBadge(product.category)}
                          </TableCell>
                          <TableCell className="font-mono">
                            ${product.price.toFixed(2)}/{product.unit}
                          </TableCell>
                          <TableCell>
                            <div className="flex items-center space-x-2">
                              <span>{product.inventory}</span>
                              {product.inventory < 10 && (
                                <AlertTriangleIcon className="w-4 h-4 text-[#FBAD18]" />
                              )}
                            </div>
                          </TableCell>
                          <TableCell>
                            {getStatusBadge(product.status)}
                          </TableCell>
                          <TableCell className="text-right">
                            <div className="flex items-center justify-end space-x-2">
                              <Button
                                variant="ghost"
                                size="sm"
                                onClick={() => handleEditProduct(product)}
                              >
                                <EditIcon className="w-4 h-4" />
                              </Button>
                              <Button
                                variant="ghost"
                                size="sm"
                                onClick={() => handleDeleteProduct(product.id)}
                              >
                                <TrashIcon className="w-4 h-4" />
                              </Button>
                            </div>
                          </TableCell>
                        </TableRow>
                      ))
                    )}
                  </TableBody>
                </Table>
              </div>
            </CardContent>
          </Card>
        </TabsContent>

        <TabsContent value="categories" className="space-y-4">
          <Card>
            <CardHeader>
              <CardTitle>Service Categories</CardTitle>
              <CardDescription>
                Manage telecom service categories and their pricing structures
              </CardDescription>
            </CardHeader>
            <CardContent>
              <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4">
                {categories.map((category) => {
                  const categoryProducts = mockERPProducts.filter(
                    (p) => p.category === category
                  );
                  const categoryValue = categoryProducts.reduce(
                    (sum, p) => sum + p.price * p.inventory,
                    0
                  );

                  return (
                    <Card key={category}>
                      <CardHeader>
                        <div className="flex items-center justify-between">
                          <CardTitle className="text-lg">{category}</CardTitle>
                          <Button variant="ghost" size="sm">
                            <SettingsIcon className="w-4 h-4" />
                          </Button>
                        </div>
                      </CardHeader>
                      <CardContent>
                        <div className="space-y-2">
                          <div className="flex justify-between text-sm">
                            <span>Service Plans:</span>
                            <span className="font-medium">
                              {categoryProducts.length}
                            </span>
                          </div>
                          <div className="flex justify-between text-sm">
                            <span>Revenue Potential:</span>
                            <span className="font-medium">
                              ${categoryValue.toLocaleString()}
                            </span>
                          </div>
                          <div className="flex justify-between text-sm">
                            <span>Active:</span>
                            <span className="font-medium">
                              {
                                categoryProducts.filter(
                                  (p) => p.status === "active"
                                ).length
                              }
                            </span>
                          </div>
                        </div>
                      </CardContent>
                    </Card>
                  );
                })}
              </div>
            </CardContent>
          </Card>
        </TabsContent>

        <TabsContent value="pricing" className="space-y-4">
          <div className="grid grid-cols-1 lg:grid-cols-2 gap-6">
            <Card>
              <CardHeader>
                <CardTitle className="flex items-center space-x-2">
                  <LayersIcon className="w-5 h-5 text-[#58C5C7]" />

                  <span>Pricing Tiers</span>
                </CardTitle>
                <CardDescription>
                  Volume-based pricing tiers for telecom services
                </CardDescription>
              </CardHeader>
              <CardContent>
                <div className="space-y-4">
                  <div className="border rounded-lg p-4">
                    <div className="flex items-center justify-between mb-2">
                      <h4 className="font-semibold">Voice Services - Tier 1</h4>
                      <Badge className="bg-green-100 text-green-800">
                        Active
                      </Badge>
                    </div>
                    <div className="text-sm text-muted-foreground space-y-1">
                      <div>Volume: 0 - 10,000 minutes/month</div>
                      <div>Rate: $0.015/minute</div>
                      <div>Discount: 0%</div>
                    </div>
                  </div>
                  <div className="border rounded-lg p-4">
                    <div className="flex items-center justify-between mb-2">
                      <h4 className="font-semibold">Voice Services - Tier 2</h4>
                      <Badge className="bg-green-100 text-green-800">
                        Active
                      </Badge>
                    </div>
                    <div className="text-sm text-muted-foreground space-y-1">
                      <div>Volume: 10,001 - 50,000 minutes/month</div>
                      <div>Rate: $0.012/minute</div>
                      <div>Discount: 20%</div>
                    </div>
                  </div>
                  <div className="border rounded-lg p-4">
                    <div className="flex items-center justify-between mb-2">
                      <h4 className="font-semibold">
                        Voice Services - Enterprise
                      </h4>
                      <Badge className="bg-green-100 text-green-800">
                        Active
                      </Badge>
                    </div>
                    <div className="text-sm text-muted-foreground space-y-1">
                      <div>Volume: 50,001+ minutes/month</div>
                      <div>Rate: $0.008/minute</div>
                      <div>Discount: 47%</div>
                    </div>
                  </div>
                </div>
                <Button className="w-full mt-4 bg-[#58C5C7] hover:bg-[#58C5C7]/80">
                  <PlusIcon className="w-4 h-4 mr-2" />
                  Add Pricing Tier
                </Button>
              </CardContent>
            </Card>

            <Card>
              <CardHeader>
                <CardTitle className="flex items-center space-x-2">
                  <PercentIcon className="w-5 h-5 text-[#58C5C7]" />

                  <span>Discount Rules</span>
                </CardTitle>
                <CardDescription>
                  Automated discounts and promotional pricing
                </CardDescription>
              </CardHeader>
              <CardContent>
                <div className="space-y-4">
                  <div className="border rounded-lg p-4">
                    <div className="flex items-center justify-between mb-2">
                      <h4 className="font-semibold">Annual Commitment</h4>
                      <Badge className="bg-blue-100 text-blue-800">
                        15% Off
                      </Badge>
                    </div>
                    <div className="text-sm text-muted-foreground">
                      12-month contract commitment discount
                    </div>
                  </div>
                  <div className="border rounded-lg p-4">
                    <div className="flex items-center justify-between mb-2">
                      <h4 className="font-semibold">Multi-Service Bundle</h4>
                      <Badge className="bg-purple-100 text-purple-800">
                        10% Off
                      </Badge>
                    </div>
                    <div className="text-sm text-muted-foreground">
                      Voice + Messaging + Data services
                    </div>
                  </div>
                  <div className="border rounded-lg p-4">
                    <div className="flex items-center justify-between mb-2">
                      <h4 className="font-semibold">New Customer</h4>
                      <Badge className="bg-orange-100 text-orange-800">
                        First Month Free
                      </Badge>
                    </div>
                    <div className="text-sm text-muted-foreground">
                      First-time customer promotion
                    </div>
                  </div>
                </div>
                <Button className="w-full mt-4" variant="outline">
                  <PlusIcon className="w-4 h-4 mr-2" />
                  Create Discount Rule
                </Button>
              </CardContent>
            </Card>
          </div>
        </TabsContent>

        <TabsContent value="packages" className="space-y-4">
          <Card>
            <CardHeader>
              <CardTitle className="flex items-center space-x-2">
                <PackageIcon className="w-5 h-5 text-[#58C5C7]" />

                <span>Service Packages</span>
              </CardTitle>
              <CardDescription>
                Pre-configured service bundles and packages for different
                customer segments
              </CardDescription>
            </CardHeader>
            <CardContent>
              <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
                <Card className="border-2">
                  <CardHeader>
                    <div className="flex items-center justify-between">
                      <CardTitle className="text-lg">Startup Package</CardTitle>
                      <Badge className="bg-green-100 text-green-800">
                        Popular
                      </Badge>
                    </div>
                    <CardDescription>
                      Perfect for small businesses
                    </CardDescription>
                  </CardHeader>
                  <CardContent>
                    <div className="space-y-3">
                      <div className="text-2xl font-bold">$89/month</div>
                      <div className="space-y-2 text-sm">
                        <div className="flex items-center space-x-2">
                          <PhoneIcon className="w-4 h-4 text-[#58C5C7]" />

                          <span>2 SIP Trunks</span>
                        </div>
                        <div className="flex items-center space-x-2">
                          <PhoneIcon className="w-4 h-4 text-[#58C5C7]" />

                          <span>5 DID Numbers</span>
                        </div>
                        <div className="flex items-center space-x-2">
                          <MessageSquareIcon className="w-4 h-4 text-[#58C5C7]" />

                          <span>1,000 SMS/month</span>
                        </div>
                        <div className="flex items-center space-x-2">
                          <DatabaseIcon className="w-4 h-4 text-[#58C5C7]" />

                          <span>Basic Analytics</span>
                        </div>
                      </div>
                    </div>
                  </CardContent>
                </Card>

                <Card className="border-2 border-[#58C5C7]">
                  <CardHeader>
                    <div className="flex items-center justify-between">
                      <CardTitle className="text-lg">
                        Business Package
                      </CardTitle>
                      <Badge className="bg-[#58C5C7] text-white">
                        Recommended
                      </Badge>
                    </div>
                    <CardDescription>
                      Ideal for growing companies
                    </CardDescription>
                  </CardHeader>
                  <CardContent>
                    <div className="space-y-3">
                      <div className="text-2xl font-bold">$249/month</div>
                      <div className="space-y-2 text-sm">
                        <div className="flex items-center space-x-2">
                          <PhoneIcon className="w-4 h-4 text-[#58C5C7]" />

                          <span>10 SIP Trunks</span>
                        </div>
                        <div className="flex items-center space-x-2">
                          <PhoneIcon className="w-4 h-4 text-[#58C5C7]" />

                          <span>25 DID Numbers</span>
                        </div>
                        <div className="flex items-center space-x-2">
                          <MessageSquareIcon className="w-4 h-4 text-[#58C5C7]" />

                          <span>10,000 SMS/month</span>
                        </div>
                        <div className="flex items-center space-x-2">
                          <DatabaseIcon className="w-4 h-4 text-[#58C5C7]" />

                          <span>Advanced Analytics</span>
                        </div>
                        <div className="flex items-center space-x-2">
                          <SettingsIcon className="w-4 h-4 text-[#58C5C7]" />

                          <span>API Access</span>
                        </div>
                      </div>
                    </div>
                  </CardContent>
                </Card>

                <Card className="border-2">
                  <CardHeader>
                    <div className="flex items-center justify-between">
                      <CardTitle className="text-lg">
                        Enterprise Package
                      </CardTitle>
                      <Badge variant="outline">Custom</Badge>
                    </div>
                    <CardDescription>
                      Scalable enterprise solution
                    </CardDescription>
                  </CardHeader>
                  <CardContent>
                    <div className="space-y-3">
                      <div className="text-2xl font-bold">Custom Pricing</div>
                      <div className="space-y-2 text-sm">
                        <div className="flex items-center space-x-2">
                          <PhoneIcon className="w-4 h-4 text-[#58C5C7]" />

                          <span>Unlimited Trunks</span>
                        </div>
                        <div className="flex items-center space-x-2">
                          <PhoneIcon className="w-4 h-4 text-[#58C5C7]" />

                          <span>Custom DID Blocks</span>
                        </div>
                        <div className="flex items-center space-x-2">
                          <MessageSquareIcon className="w-4 h-4 text-[#58C5C7]" />

                          <span>High-Volume Messaging</span>
                        </div>
                        <div className="flex items-center space-x-2">
                          <DatabaseIcon className="w-4 h-4 text-[#58C5C7]" />

                          <span>Custom Analytics</span>
                        </div>
                        <div className="flex items-center space-x-2">
                          <SettingsIcon className="w-4 h-4 text-[#58C5C7]" />

                          <span>Dedicated Support</span>
                        </div>
                      </div>
                    </div>
                  </CardContent>
                </Card>
              </div>
              <div className="mt-6 flex justify-center">
                <Button className="bg-[#58C5C7] hover:bg-[#58C5C7]/80">
                  <PlusIcon className="w-4 h-4 mr-2" />
                  Create Custom Package
                </Button>
              </div>
            </CardContent>
          </Card>
        </TabsContent>

        <TabsContent value="reports" className="space-y-4">
          <Card>
            <CardHeader>
              <CardTitle>Service Analytics</CardTitle>
              <CardDescription>
                Generate reports for service utilization, revenue, and
                performance metrics
              </CardDescription>
            </CardHeader>
            <CardContent>
              <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
                <Card>
                  <CardHeader>
                    <CardTitle className="text-lg">
                      Capacity Utilization
                    </CardTitle>
                  </CardHeader>
                  <CardContent>
                    <p className="text-sm text-muted-foreground mb-4">
                      Service capacity utilization and availability
                    </p>
                    <Button variant="outline" className="w-full">
                      <DownloadIcon className="w-4 h-4 mr-2" />
                      Generate Report
                    </Button>
                  </CardContent>
                </Card>

                <Card>
                  <CardHeader>
                    <CardTitle className="text-lg">
                      Service Performance
                    </CardTitle>
                  </CardHeader>
                  <CardContent>
                    <p className="text-sm text-muted-foreground mb-4">
                      Revenue performance and service analytics
                    </p>
                    <Button variant="outline" className="w-full">
                      <BarChart3Icon className="w-4 h-4 mr-2" />
                      View Analytics
                    </Button>
                  </CardContent>
                </Card>
              </div>
            </CardContent>
          </Card>
        </TabsContent>
      </Tabs>

      {/* Edit Product Dialog */}
      <Dialog open={isEditDialogOpen} onOpenChange={setIsEditDialogOpen}>
        <DialogContent className="max-w-2xl">
          <DialogHeader>
            <DialogTitle>Edit Product</DialogTitle>
            <DialogDescription>
              Update product information and settings
            </DialogDescription>
          </DialogHeader>
          <ProductForm product={selectedProduct || undefined} isEdit={true} />
        </DialogContent>
      </Dialog>
    </div>
  );
}
